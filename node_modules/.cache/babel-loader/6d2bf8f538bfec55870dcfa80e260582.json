{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexisortiz/Documents/426proj/mental-health-app/src/pages/home.js\";\nimport React, { Component } from 'react';\nimport { Section, Field, Label, Control, Input } from 'bloomer';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport locationInput from '../components/search';\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.state = {\n      address: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(\"locationInput\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                placeholder: \"Text Input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(GooglePlacesAutocomplete, {\n                apiKey: \"AIzaSyBRb-fKaIz-G6yDg6eTuv4tS4FcGC6TPkQ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n          value: this.state.address,\n          onChange: this.handleChange,\n          onSelect: this.handleSelect,\n          children: ({\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"autocomplete-dropdown-container\",\n              children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 27\n              }, this), suggestions.map(suggestion => {\n                const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n                const style = suggestion.active ? {\n                  backgroundColor: '#fafafa',\n                  cursor: 'pointer'\n                } : {\n                  backgroundColor: '#ffffff',\n                  cursor: 'pointer'\n                };\n                return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                    className,\n                    style\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: suggestion.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Home;","map":{"version":3,"sources":["/Users/alexisortiz/Documents/426proj/mental-health-app/src/pages/home.js"],"names":["React","Component","Section","Field","Label","Control","Input","GooglePlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","PlacesAutocomplete","locationInput","Home","constructor","props","handleChange","address","setState","state","render","handleSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Section, Field, Label, Control, Input} from 'bloomer';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport {\n  geocodeByAddress,\n  geocodeByPlaceId,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport locationInput from '../components/search';\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: '' };\n  }\n \n  handleChange = address => {\n    this.setState({ address });\n  };\n  render() {\n    return (\n      <div>\n        <body>\n          <locationInput />\n            <Section>\n              <Field>\n                  <Label>Name</Label>\n                  <Control>\n                      <Input type=\"text\" placeholder='Text Input' /><GooglePlacesAutocomplete\n      apiKey=\"AIzaSyBRb-fKaIz-G6yDg6eTuv4tS4FcGC6TPkQ\"\n    />\n                  </Control>\n              </Field>\n            </Section> \n            <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>  \n        </body>\n      </div>\n  );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}