{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexisortiz/Documents/426proj/mental-health-app/src/components/quotes.js\";\nimport React, { Component } from 'react';\nimport { Section } from 'bloomer';\nexport class Quotes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://quotes.rest/qod').then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      isLoaded,\n      items,\n      error\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" \", item.price]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\nexport default Quotes;","map":{"version":3,"sources":["/Users/alexisortiz/Documents/426proj/mental-health-app/src/components/quotes.js"],"names":["React","Component","Section","Quotes","constructor","props","state","error","items","isLoaded","componentDidMount","fetch","then","res","json","result","setState","render","message","map","item","name","price","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,SAAtB;AAEA,OAAO,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,yBAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA,KAAK,EAAEO,MAAM,CAACP;AAFF,OAAd;AAID,KARH,EASE;AACA;AACA;AACCD,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAE,IADE;AAEZF,QAAAA;AAFY,OAAd;AAID,KAjBH;AAmBH;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,QAAF;AAAYD,MAAAA,KAAZ;AAAmBD,MAAAA;AAAnB,QAA6B,KAAKD,KAAxC;;AAEA,QAAIC,KAAJ,EAAW;AACP,0BAAO;AAAA,8BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFH,MAES,IAAI,CAACT,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA,kBACGD,KAAK,CAACW,GAAN,CAAUC,IAAI,iBACb;AAAA,qBACGA,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,KADpB;AAAA,WAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AASD;AAGJ;;AApDmC;AAuDtC,eAAepB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Section} from 'bloomer';\n\nexport class Quotes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        error: null,\n        items: [],\n        isLoaded: false, \n    };\n  }\n  \n  componentDidMount() {\n      fetch('https://quotes.rest/qod')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  \n  render() {\n    const { isLoaded, items, error } = this.state;\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <ul>\n            {items.map(item => (\n              <li key={item.id}>\n                {item.name} {item.price}\n              </li>\n            ))}\n          </ul>\n        );\n      }\n        \n    \n  }\n}\n\nexport default Quotes;"]},"metadata":{},"sourceType":"module"}